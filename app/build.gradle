apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.cesoft.organizate2"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    /*flavorDimensions "pro", "deb"
    productFlavors {
        pro {
            dimension "pro"
        }
        deb {
            dimension "deb"
            applicationIdSuffix ".deb"
            versionNameSuffix "-deb"
        }
    }*/
}

def kotlin_coroutines_version = '0.22.1'
def dagger_version = '2.11'
def lifecycle_version = '1.1.1'

def mockito_version = '1.4.0'
def robolectric_version = '3.8'
def junit_version = '4.12'
def kluent_version = '1.14'

dependencies {
    // Wizard
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation "org.amshove.kluent:kluent:$kluent_version"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "com.nhaarman:mockito-kotlin:$mockito_version"

    // Support
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:design:27.1.1'

    // Kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // DB
    kapt "android.arch.persistence.room:compiler:1.1.0"
    implementation    "android.arch.persistence.room:runtime:1.1.0"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.0"

    // DI
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger:$dagger_version"

    // Architecture Components
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
/*
*
  mainApplication = [
      kotlin:                     "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
      kotlinCoroutines:           "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version",
      kotlinCoroutinesAndroid:    "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version",
      appCompat:                  "com.android.support:appcompat-v7:$appCompat_version",
      cardView:                   "com.android.support:cardview-v7:$appCompat_version",
      recyclerView:               "com.android.support:recyclerview-v7:$appCompat_version",
      design:                     "com.android.support:design:$appCompat_version",
      constraintLayout:           "com.android.support.constraint:constraint-layout:$constraintLayout_version",
      androidAnnotations:         "com.android.support:support-annotations:$appCompat_version",
      archComponents:             "android.arch.lifecycle:extensions:$archComponents_version",
      archComponentsCompiler:     "android.arch.lifecycle:compiler:$archComponents_version",
      glide:                      "com.github.bumptech.glide:glide:$glide_version",
      daggerCompiler:             "com.google.dagger:dagger-compiler:$dagger_version",
      dagger:                     "com.google.dagger:dagger:$dagger_version",
      javaxAnnotation:            "javax.annotation:jsr250-api:$javaxAnnotations_version",
      javaxInject:                "javax.inject:javax.inject:$javaxInject_version",
      retrofit:                   "com.squareup.retrofit2:converter-gson:$retrofit_version",
      okhttpLoggingInterceptor:   "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor_version",
  ]

  unitTesting = [
      kotlin:             "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
      kotlinTest:         "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
      robolectric:        "org.robolectric:robolectric:$robolectric_version",
      junit:              "junit:junit:$junit_version",
      mockito:            "com.nhaarman:mockito-kotlin:$mockito_version",
      kluent:             "org.amshove.kluent:kluent:$kluent_version",
  ]

  acceptanceTesting = [
      testRunner:         "com.android.support.test:runner:$runner_version",
      testRules:          "com.android.support.test:rules:$runner_version",
      espressoCore:       "com.android.support.test.espresso:espresso-core:$espresso_version",
      espressoIntents:    "com.android.support.test.espresso:espresso-intents:$espresso_version",
      androidAnnotations: "com.android.support:support-annotations:$appCompat_version",
  ]

  development = [
      leakCanary:         "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
      leakCanaryNoop:     "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
  ]*/